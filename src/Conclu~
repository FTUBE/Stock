From what we have discussed in previous session, there are four starting points:

1. The bottom layer architecture (that is, the place where the rules are applied to, whether it is Ad-hoc environment or BSS)

2. When should we balance the load. (Something we haven't considered before, but indeed, this should be treated collectively.)

3. Which flow should we remove?

4. Where should the removed flow go?

I summed up the ideas and ordered them based on the priority, they are:

TOPIC1 - On how to(the place and flows) direct the load, so that it gives best balancing property.
       	 (Or, An integrated load balancing method that consider both connectivity and STA choices.)

Problem : There are two reasons for load balancing:
	  1. Some APs are over-loading while others remain under-used.
	  2. We can somehow arrange a certain set of flows and direct them to those under-utilized APs.

	  Therefore, even if we could, by any chance, find a way to choose the best flow(STAs), if we cannot further find a destination where the flows can be directed, the load balancing is meaningless.
	  
	  WHAT WE KNOW? This suggests that the strategy should be made by taking both 'which' and 'where' into consideration.

Solution : 1. A matrix representation of the connectivity of AP-STA association.
	   2. The desired condition will be, a maximized balance of Each AP.(APs have minimized STD_DEV)
	   In total, we have an allocation map, then we switch certain STAs according to that.

TOPIC2 - How to give better APs utilization as well as a lower degree of switching cost.

Problem : Even if somehow we find an allocation map, there might be a huge cost to switch the STAs, given the fact that:
	  Fact : The effect of the above strategy is global-wide, so any topological or network changes in some local area will potentially affect the global state.
	  
	  The discuessed switching happens frequently given the fact that:
	  Fact 1: The bursty characteristic of network flow.
	  Fact 2: The dynamic nature of the AP-STA association.
	  
	  In total, the problem is, the switching - 'Costs a lot', 'Happens a lot'

Solution : Apply the rules less frequently? - It is not necessary to switch STA everytime the topology changes.
	 	   
		   Or

	   Compromise to a less costy strategy, in exchange of a worse balanced association.

